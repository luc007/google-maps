package Presto;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.events.EventFiringWebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseTest  {

	private static WebDriver driver;
	private static WebDriverWait wait;

	protected static void startChromeDriver() {
		WebDriverManager.chromedriver().setup();
		ChromeOptions options = new ChromeOptions();
		Map<String, Object> prefs = new HashMap<String, Object>();
		prefs.put("credentials_enable_service", false);
		prefs.put("profile.password_manager_enabled", false);
		prefs.put("profile.default_content_setting_values.notifications", 2);

		options.setExperimentalOption("prefs", prefs);
		// disable chrome is being controlled by automated software
		options.setExperimentalOption("excludeSwitches", Collections.singletonList("enable-automation"));
		// disable developer mode extension popup
		options.setExperimentalOption("useAutomationExtension", false);

		driver = new ChromeDriver( options );

		driver.manage().window().maximize();
		driver.get("about:blank");
	}	
	
	public void click(By by) {
		wait.until(ExpectedConditions.elementToBeClickable(listAddress));
		driver.findElement(listAddress).click();

	}

	public BaseTest() {
		super();
	}

	public static WebDriver getWebDriver() {
		return driver;
	}

}
