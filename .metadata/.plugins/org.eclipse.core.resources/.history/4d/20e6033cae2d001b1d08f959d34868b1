package Presto;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.events.EventFiringWebDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseTest extends EventFiringWebDriver {

	 private static WebDriver DRIVER;
	 private static String DRIVER_PATH;
	 
	 protected static void startChromeDriver() {
//	        String version = SystemProperties.getSingleProp("CHROMEDRIVER.VERSION");
	        WebDriverManager.chromedriver().setup();
	        ChromeOptions options = new ChromeOptions();
	        Map<String, Object> prefs = new HashMap<String, Object>();
	        prefs.put("credentials_enable_service", false);
	        prefs.put("profile.password_manager_enabled", false);
	        prefs.put("profile.default_content_setting_values.notifications", 2);

	        options.setExperimentalOption("prefs", prefs);
	        // disable chrome is being controlled by automated software
	        options.setExperimentalOption("excludeSwitches", Collections.singletonList("enable-automation"));
	        // disable developer mode extension popup
	        options.setExperimentalOption("useAutomationExtension", false);

	        DRIVER = new ChromeDriver( options );

	        DRIVER.manage().window().maximize();
	        DRIVER.get("about:blank");
	    }	

	   public BaseTest() {
	        super( DRIVER );
	    }

	    public static WebDriver getWebDriver() {
	        return DRIVER;
	    }
	    
}
